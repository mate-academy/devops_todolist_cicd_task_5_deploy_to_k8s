name: Deploy to kind

run-name: ${{ github.actor }} - ${{ github.ref_name }}

on:
 workflow_call:
   inputs:
     environment:
       required: true
       description: 'Environment to deploy to'
       type: string
     version:
       required: true
       description: 'Version of the image to deploy'
       type: string
     helm-values-path:
       description: 'Path to the helm values file'
       type: string
       default: './todoapp/values.yaml'
     helm-release-name:
       description: 'Name of the helm release'
       type: string
       default: 'todoapp'
jobs:
  deploy-helm:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    name: ${{ inputs.environment }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: helm-package
        path: .
 
    - uses: actions/download-artifact@v4
      with:
        name: helm-artifacts
        path: .
  
    - name: Set up kind
      run: |
        kind create cluster --config cluster.yml

    - name: Set up Helm
      uses: azure/setup-helm@v4.2.0

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        
    - name: Deploy Helm
      run: |
        helm upgrade --install --atomic --wait --timeout 1800s --debug ${{ inputs.helm-release-name }} ./helm-charts/todoapp \
          -f ${{ inputs.helm-values-path }} \
          --set image.tag=${{ inputs.version }} \
          --set mysql.configs.MYSQL_ROOT_PASSWORD="${{ secrets.MYSQL_ROOT_PASSWORD }}" \
          --set mysql.configs.MYSQL_USER="${{ secrets.MYSQL_USER }}" \
          --set mysql.configs.MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}" \
          --set todoapp.secrets.password="${{ secrets.PASSWORD }}" \
          --set todoapp.secrets.login="${{ secrets.LOGIN }}" \
          --set todoapp.secrets.SECRET_KEY="${{ secrets.SECRET_KEY }}" \
          --set todoapp.secrets.DB_NAME="${{ secrets.DB_NAME }}" \
          --set todoapp.secrets.DB_USER="${{ secrets.DB_USER }}" \
          --set todoapp.secrets.DB_HOST="${{ secrets.DB_HOST }}" \
          --set todoapp.secrets.DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
          --set global.environment="${{ inputs.environment }}" \
          --set todoapp.image.version="${{ inputs.version }}"
